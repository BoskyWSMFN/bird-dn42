protocol device {
  scan time 10;
}

# filter helpers
#################

function is_freifunk() {
  return net ~ [ 10.0.0.0/8+ ];
}

function is_dn42()     {
  return net ~ [
    37.1.89.160/29+,      # siska
    46.4.248.192/27+,     # welterde
    46.19.90.48/28+,      # planet cyborg
    46.19.90.96/28+,      # planet cyborg
    80.244.241.224/27+,   # jchome service network
    85.25.246.16/28+,     # Leon Weber
    87.106.29.254/32,     # wintix
    91.204.4.0/22+,       # free.de via ctdo
    94.45.224.0/19+,      # ccc event network
    172.22.0.43/32,       # Whois Anycast
    172.22.0.53/32,       # Dns Anycast
    172.22.0.94/32,       # TOR Anycast
    172.22.0.0/15{15,30}, # official subnet for dn42
    172.23.0.0/16{15,30}, # official subnet for dn42
    178.63.170.40/32,     # jomat
    188.40.34.241/32,     # jomat
    192.175.48.0/24+,     # AS112-prefix for reverse-dns
    193.43.220.0/23+,     # durchdieluft via ctdo
    195.16.84.40/29+,     # siska
    195.160.168.0/23+,    # ctdo
    195.191.196.0/23+     # ichdasich pi-space
  ];
}

function is_chaosvpn() {
  return net ~ [
    10.4.0.0/16+,        # Allocated for ChaosVPN. Ready for distribution, currently not used
    10.32.0.0/16+,       # Allocated for ChaosVPN. Ready for distribution, currently not used
    10.42.16.0/20+,      # legacy
    10.100.0.0/14+,      # us hackerspaces range
    10.104.0.0/14+,      # Warzone, currently not used
    172.31.0.0/16+,      # In use by European hackerspaces
    83.133.178.0/23+,    # kapsel - CCC Munich
    172.26.0.0/15+,      # KBU Freifunk
    172.31.255.53/32,    # dns anycast
    176.9.52.58/32+,     # haegar_vlad
    178.33.2.240/28+,    # o_g
    193.103.159.0/24+,   # haegar_vlad
    193.103.160.0/23+,   # haegar_vlad
    212.12.50.208/29+,   # ccchh
    213.238.61.128/26+   # mc.fly
  ];
}

# local configuration
######################

include "bird/local4.conf";

# Kernel routing tables
########################

protocol kernel {
  scan time 20;
  device routes;
  import none;
  export filter {
    krt_prefsrc = OWNIP;
    accept;
  };
};

# static routes
################

protocol static {
  route 172.23.75.0/24 drop;
};

# DN42
#######

template bgp dnpeers {
  local as OWNAS;
  path metric 1;
  import keep filtered;
  import filter {
    if (is_dn42() || is_freifunk() || is_chaosvpn()) && !is_self_net() then {
      accept;
    }
    reject;
  };
  export filter {
    if is_freifunk() || is_dn42() || is_chaosvpn() then {
      accept;
    }
    reject;
  };
  route limit 10000;
  source address OWNIP;
};

include "bird/peers4/*";
