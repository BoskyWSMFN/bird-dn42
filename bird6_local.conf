router id 10.130.14.1;

define OWNAS = 65052;
define ULA_IP = fdef:ffc0:3dd7::e01;
define PUBLIC_IP = 2001:bf7:110::e01;
define KERNEL_TABLE = ipt_freifunk;

function is_self_net() {
	return net ~ [fdef:ffc0:3dd7::/48+, 2001:bf7:110::/44+];
}

protocol static static_mesh {
	table peering;
	route fdef:ffc0:3dd7::/48 reject;
	route 2001:bf7:110::/44 reject;
}

protocol static local_mesh {
	route fdef:ffc0:3dd7::/64 via "freifunk";
	route 2001:bf7:110::/64 via "freifunk";
}

# Mesh-internal routing
########################

protocol rip rip_mesh {
	interface "freifunk";
	preference 10;
	import where is_ula() || is_freifunk() || is_self_net();
	export all;
}

# Freifunk-Client-VPN
######################

protocol static local_clientvpn {
	route fdef:ffc0:3dd7:10::/64 via "freifunk-client";
	route 2001:bf7:110:10::/64 via "freifunk-client";
}

protocol ospf OSPF {
	rfc1583compat yes;
	import none;
	export all;

	area 10.130.16.0 {
		interface "freifunk-client" {
			type broadcast;
		};
	};
};

# DN42 peerings
################

template bgp bgp_dn42 {
	table peering;
	local as OWNAS;
	import where is_ula() && !is_self_net();
	export where !is_default();
}

include "bird6_dn42.conf";
